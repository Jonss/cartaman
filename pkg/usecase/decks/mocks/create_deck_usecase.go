// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Jonss/cartaman/pkg/usecase/decks (interfaces: DeckUseCase)

// Package mock_decks is a generated GoMock package.
package mock_decks

import (
	context "context"
	reflect "reflect"

	decks "github.com/Jonss/cartaman/pkg/usecase/decks"
	gomock "github.com/golang/mock/gomock"
)

// MockDeckUseCase is a mock of DeckUseCase interface.
type MockDeckUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockDeckUseCaseMockRecorder
}

// MockDeckUseCaseMockRecorder is the mock recorder for MockDeckUseCase.
type MockDeckUseCaseMockRecorder struct {
	mock *MockDeckUseCase
}

// NewMockDeckUseCase creates a new mock instance.
func NewMockDeckUseCase(ctrl *gomock.Controller) *MockDeckUseCase {
	mock := &MockDeckUseCase{ctrl: ctrl}
	mock.recorder = &MockDeckUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeckUseCase) EXPECT() *MockDeckUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDeckUseCase) Create(arg0 context.Context, arg1 decks.CreateParams) (*decks.Deck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*decks.Deck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockDeckUseCaseMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDeckUseCase)(nil).Create), arg0, arg1)
}
